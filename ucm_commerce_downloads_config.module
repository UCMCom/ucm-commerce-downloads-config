<?php
/**
 * @file ucm_commerce_downloads_config.module
 * Adds a rule that adds product key to orders when they are completed.
 */

/**
 * Implements hook_default_rules_configuration().
 */
function ucm_commerce_downloads_config_default_rules_configuration() {
  $items = array();
  $items['rules_assign_product_keys'] = entity_import('rules_config', '{ "rules_assign_product_keys" : {
    "LABEL" : "Assign Product Keys",
    "PLUGIN" : "reaction rule",
    "REQUIRES" : [ "commerce_product_key", "commerce_checkout" ],
    "ON" : [ "commerce_checkout_complete" ],
    "DO" : [ { "assign_product_key" : { "order" : [ "commerce-order" ] } } ]
  }
}');
 $items['rules_issue_active_licenses_on_checkout_complete'] = entity_import('rules_config', '{ "rules_issue_active_licenses_on_checkout_complete" : {
    "LABEL" : "Issue active licenses on checkout complete",
    "PLUGIN" : "reaction rule",
    "REQUIRES" : [ "commerce_file", "commerce_checkout" ],
    "ON" : [ "commerce_checkout_complete" ],
    "DO" : [
      { "commerce_file_license_issue_order" : { "order" : [ "commerce-order" ], "license-status" : "active" } }
    ]
  }
}');
  return $items;
}
function ucm_commerce_downloads_default_rules_configuration_alter(&$configs) {
   //Disable a few rules
   $configs['commerce_file_license_issue_checkout']->active = false;
   $configs['commerce_payment_commerce_payment_example']->active = false;
   $configs['commerce_checkout_new_account']->active = false;
   $configs['commerce_file_license_issue_order']->active = false;
   $configs['commerce_payment_commerce_payment_example']->active = false;
}
